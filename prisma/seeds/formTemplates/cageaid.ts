import {PrismaClient} from '../../../generated/prisma/client';
import {formTemplateConstants} from '../contants';

const prisma = new PrismaClient();

const CAGE_AID_QUESTIONS = [
  '¬øAlguna vez has sentido que deb√≠as reducir tu consumo de alcohol o drogas?',
  '¬øTe ha molestado que la gente te critique por tu forma de consumir?',
  '¬øAlguna vez te has sentido culpable por tu consumo de alcohol o drogas?',
  '¬øAlguna vez has necesitado tomar alcohol o consumir alguna droga al despertarte para calmarte o comenzar el d√≠a (lo que se conoce como ‚Äúeye-opener‚Äù)?',
];

const CAGE_AID_OPTIONS = ['S√≠', 'No'];

async function main() {
  console.log('üîç Buscando formulario CAGE-AID existente...');
  const existing = await prisma.formTemplate.findFirst({
    where: {
      title: {
        contains: 'CAGE-AID',
        mode: 'insensitive',
      },
    },
  });

  if (existing) {
    console.log('‚ö†Ô∏è  El formulario CAGE-AID ya existe. Abortando.');
    return;
  }

  console.log('üöÄ Creando formulario CAGE-AID ‚Äì Detecci√≥n de Consumo de Sustancias...');
  const form = await prisma.formTemplate.create({
    data: {
      title: 'CAGE-AID ‚Äì Detecci√≥n Breve de Consumo de Sustancias',
      description:
        'Contesta pensando en tu consumo de alcohol o drogas. Responde ‚ÄúS√≠‚Äù o ‚ÄúNo‚Äù a cada pregunta.\n\nInterpretaci√≥n:\n- 1 punto por cada ‚ÄúS√≠‚Äù\n- 2 o m√°s puntos indican posible consumo problem√°tico. Requiere una evaluaci√≥n m√°s profunda.',
      isActive: true,
      createdBy: formTemplateConstants.ADMIN_ID,
      questions: {
        create: CAGE_AID_QUESTIONS.map((text, index) => ({
          text,
          type: 'MULTIPLE_CHOICE',
          order: index + 1,
          options: CAGE_AID_OPTIONS,
        })),
      },
    },
    include: {
      questions: true,
    },
  });

  console.log(`‚úÖ Formulario CAGE-AID creado con ID: ${form.id}`);
  console.log(`üß† Preguntas agregadas: ${form.questions.length}`);
}

main()
  .then(() => {
    console.log('üéâ Seed completado exitosamente.');
    return prisma.$disconnect();
  })
  .catch(async (e) => {
    console.error('‚ùå Error al ejecutar el seed:', e);
    await prisma.$disconnect();
    process.exit(1);
  });
